<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
	default-lazy-init="true">
	
	<bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/mrbbs" />  
        <property name="username" value="root" />  
        <property name="password" value="588209zgy" />
    </bean>  

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
    <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象   -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>
	<!-- 缓存管理   -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>
      
    <!-- 使用Shiro自带的JdbcRealm类  
    指定密码匹配所需要用到的加密对象  
    指定存储用户、角色、权限许可的数据源及相关查询语句 -->  
    
	 <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">  
	     <property name="credentialsMatcher" ref="credentialsMatcher"></property>  
	     <property name="permissionsLookupEnabled" value="true"></property>  
	     <property name="dataSource" ref="dataSource"></property>  
	     <property name="authenticationQuery"  
	         value="SELECT password FROM sys_login WHERE username = ?"></property>  
	     <property name="userRolesQuery"  
	         value="SELECT role_name from sys_login_role slr left join sys_role using(role_id) left join sys_login using(login_id) WHERE slr.username = ?"></property>  
	     <property name="permissionsQuery"  
	         value="SELECT permission_name FROM sys_role_permission srp left join sys_role using(role_id) left join sys_permission using(permission_id) WHERE srp.role_name = ?"></property>  
	 </bean>  
	    <!-- Shiro安全管理器   -->
	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	     <property name="realm" ref="jdbcRealm"></property>  
	     <property name="cacheManager" ref="cacheManager"></property>  
	 </bean>
<!-- 	      
	    Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行  
	    Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持   
	   -->
	 <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	     <!-- Shiro的核心安全接口，这个属性是必须的   -->
	     <property name="securityManager" ref="securityManager"></property>  
	     <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
	     <property name="loginUrl" value="/login.jsp"></property>  
	     <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->  
	     <!-- <property name="successUrl" value="/index" ></property>   -->
	     <!-- 用户访问未对其授权的资源时，所显示的连接 -->  
	     <property name="unauthorizedUrl" value="/"></property>  
	     <property name="filterChainDefinitions">  
	         <value>  
	             <!-- /index=authc
	             /question=roles["admin"]
	             /question/**=roles["admin"] -->
	         </value>  
	     </property>  
	 </bean>
</beans>